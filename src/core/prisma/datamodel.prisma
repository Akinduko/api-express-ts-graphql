type User {
    id: ID!  @id @unique
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!
    dob: String!
    terms: Boolean
}

type Organization {
    createdAt: DateTime! @createdAt
    updatedAt: DateTime @updatedAt
    id: ID! @id @unique
    name: String!
    email: String!
    type: OrganizationType!
    phoneNumber: String!
    bank: Bank!
}

type OrganizationType {
    id: ID! @id @unique
    name: String!  @unique
}


type Auth {
    id: ID!  @id @unique
    email: String!  @unique
    createdAt: DateTime! @createdAt
    updatedAt: DateTime @updatedAt
    phoneNumber: String!  @unique
    pin: String!
    userId: String!
    user: User!
}

type Otp {
    id: ID!  @id @unique
    phoneNumber: String! @unique
    code: String!
    validated: Boolean!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime @updatedAt
}

type UserOrganizationRole {
    id: ID!  @id @unique
    user: User!
    role: Role!
    organization: Organization!
}

type Role {
    id: ID! @id @unique
    name: String!  @unique
}

type Success {
    id: ID! @id @unique
    success: Boolean!
}

type Bank {
    id: ID! @id @unique
    accountNumber: String!
    accountName: String!
    bankName: String!
    bankCode: String!
}

input AuthWhereUniqueInput {
  id: ID
  email: String
  phoneNumber: String
}

input OtpWhereUniqueInput {
  id: ID
  phoneNumber: String
}

input RoleWhereUniqueInput {
  id: ID
  name: String
}
